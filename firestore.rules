rules_version = '2';
service cloud.firestore {

  match /databases/{database}/documents {
    // function getThing(itemType, id) {
    //   return debug(get(/databases/$(database)/documents/$(debug(itemType))/$(debug(id))).data);
    // }

    function getRoster(itemType, id, roster) {
      return get(/databases/$(database)/documents/$(itemType)/$(id)/_rosters/$(roster)).data;
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /site/{anything} {
      allow read: if true;
      allow write: if false;
    }

    match /{itemType}/{id} {
      function canRead() {
        let roster = getRoster(itemType, id, 'readers');
        return roster.indirect[request.auth.token.trellis_profile] > 0 
            || (request.auth.uid != null && roster.direct['meta#global'] == true)
            || roster.direct['meta#public'] == true;
      }
      allow read: if canRead();
    }

  }
}